// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gosupervisor.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	gosupervisor.proto

It has these top-level messages:
	PingRequest
	PingReply
	ProcessSpec
	ProcessStatus
	Process
	ListRequest
	ListReply
	CommandRequest
	CommandReply
	ConfigFile
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProcessSpec_Autorestart int32

const (
	ProcessSpec_UNKNOW     ProcessSpec_Autorestart = 0
	ProcessSpec_FALSE      ProcessSpec_Autorestart = 1
	ProcessSpec_UNEXPECTED ProcessSpec_Autorestart = 2
	ProcessSpec_TRUE       ProcessSpec_Autorestart = 3
)

var ProcessSpec_Autorestart_name = map[int32]string{
	0: "UNKNOW",
	1: "FALSE",
	2: "UNEXPECTED",
	3: "TRUE",
}
var ProcessSpec_Autorestart_value = map[string]int32{
	"UNKNOW":     0,
	"FALSE":      1,
	"UNEXPECTED": 2,
	"TRUE":       3,
}

func (x ProcessSpec_Autorestart) String() string {
	return proto.EnumName(ProcessSpec_Autorestart_name, int32(x))
}
func (ProcessSpec_Autorestart) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type ProcessStatus_Status int32

const (
	ProcessStatus_INIT     ProcessStatus_Status = 0
	ProcessStatus_STARTING ProcessStatus_Status = 1
	ProcessStatus_RUNNING  ProcessStatus_Status = 2
	ProcessStatus_STOPPED  ProcessStatus_Status = 4
	ProcessStatus_STOPPING ProcessStatus_Status = 6
	ProcessStatus_BACKOFF  ProcessStatus_Status = 7
	ProcessStatus_FATAL    ProcessStatus_Status = 8
	ProcessStatus_EXITED   ProcessStatus_Status = 9
)

var ProcessStatus_Status_name = map[int32]string{
	0: "INIT",
	1: "STARTING",
	2: "RUNNING",
	4: "STOPPED",
	6: "STOPPING",
	7: "BACKOFF",
	8: "FATAL",
	9: "EXITED",
}
var ProcessStatus_Status_value = map[string]int32{
	"INIT":     0,
	"STARTING": 1,
	"RUNNING":  2,
	"STOPPED":  4,
	"STOPPING": 6,
	"BACKOFF":  7,
	"FATAL":    8,
	"EXITED":   9,
}

func (x ProcessStatus_Status) String() string {
	return proto.EnumName(ProcessStatus_Status_name, int32(x))
}
func (ProcessStatus_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

type CommandRequest_Command int32

const (
	CommandRequest_NONE    CommandRequest_Command = 0
	CommandRequest_STOP    CommandRequest_Command = 1
	CommandRequest_START   CommandRequest_Command = 2
	CommandRequest_RESTART CommandRequest_Command = 3
	CommandRequest_KILL    CommandRequest_Command = 4
)

var CommandRequest_Command_name = map[int32]string{
	0: "NONE",
	1: "STOP",
	2: "START",
	3: "RESTART",
	4: "KILL",
}
var CommandRequest_Command_value = map[string]int32{
	"NONE":    0,
	"STOP":    1,
	"START":   2,
	"RESTART": 3,
	"KILL":    4,
}

func (x CommandRequest_Command) String() string {
	return proto.EnumName(CommandRequest_Command_name, int32(x))
}
func (CommandRequest_Command) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{7, 0} }

type PingRequest struct {
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PingReply struct {
	ServiceVersion string `protobuf:"bytes,1,opt,name=service_version,json=serviceVersion" json:"service_version,omitempty"`
}

func (m *PingReply) Reset()                    { *m = PingReply{} }
func (m *PingReply) String() string            { return proto.CompactTextString(m) }
func (*PingReply) ProtoMessage()               {}
func (*PingReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PingReply) GetServiceVersion() string {
	if m != nil {
		return m.ServiceVersion
	}
	return ""
}

type ProcessSpec struct {
	ProcessName  string                  `protobuf:"bytes,1,opt,name=process_name,json=processName" json:"process_name,omitempty"`
	Command      string                  `protobuf:"bytes,2,opt,name=command" json:"command,omitempty"`
	User         string                  `protobuf:"bytes,3,opt,name=user" json:"user,omitempty"`
	Directory    string                  `protobuf:"bytes,4,opt,name=directory" json:"directory,omitempty"`
	Environment  []string                `protobuf:"bytes,5,rep,name=environment" json:"environment,omitempty"`
	Startsecs    float32                 `protobuf:"fixed32,6,opt,name=startsecs" json:"startsecs,omitempty"`
	Startretries int32                   `protobuf:"varint,7,opt,name=startretries" json:"startretries,omitempty"`
	Autorestart  ProcessSpec_Autorestart `protobuf:"varint,8,opt,name=autorestart,enum=ProcessSpec_Autorestart" json:"autorestart,omitempty"`
	Exitcodes    []int32                 `protobuf:"varint,9,rep,packed,name=exitcodes" json:"exitcodes,omitempty"`
	Autostart    bool                    `protobuf:"varint,10,opt,name=autostart" json:"autostart,omitempty"`
	Desc         string                  `protobuf:"bytes,11,opt,name=desc" json:"desc,omitempty"`
}

func (m *ProcessSpec) Reset()                    { *m = ProcessSpec{} }
func (m *ProcessSpec) String() string            { return proto.CompactTextString(m) }
func (*ProcessSpec) ProtoMessage()               {}
func (*ProcessSpec) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProcessSpec) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *ProcessSpec) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *ProcessSpec) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *ProcessSpec) GetDirectory() string {
	if m != nil {
		return m.Directory
	}
	return ""
}

func (m *ProcessSpec) GetEnvironment() []string {
	if m != nil {
		return m.Environment
	}
	return nil
}

func (m *ProcessSpec) GetStartsecs() float32 {
	if m != nil {
		return m.Startsecs
	}
	return 0
}

func (m *ProcessSpec) GetStartretries() int32 {
	if m != nil {
		return m.Startretries
	}
	return 0
}

func (m *ProcessSpec) GetAutorestart() ProcessSpec_Autorestart {
	if m != nil {
		return m.Autorestart
	}
	return ProcessSpec_UNKNOW
}

func (m *ProcessSpec) GetExitcodes() []int32 {
	if m != nil {
		return m.Exitcodes
	}
	return nil
}

func (m *ProcessSpec) GetAutostart() bool {
	if m != nil {
		return m.Autostart
	}
	return false
}

func (m *ProcessSpec) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

type ProcessStatus struct {
	RestartedCount  int32                `protobuf:"varint,1,opt,name=restarted_count,json=restartedCount" json:"restarted_count,omitempty"`
	LastStartedTime int32                `protobuf:"varint,2,opt,name=last_started_time,json=lastStartedTime" json:"last_started_time,omitempty"`
	Pid             int32                `protobuf:"varint,3,opt,name=pid" json:"pid,omitempty"`
	MemoryUsage     int32                `protobuf:"varint,4,opt,name=memory_usage,json=memoryUsage" json:"memory_usage,omitempty"`
	Status          ProcessStatus_Status `protobuf:"varint,5,opt,name=status,enum=ProcessStatus_Status" json:"status,omitempty"`
	ProcessDesc     string               `protobuf:"bytes,6,opt,name=process_desc,json=processDesc" json:"process_desc,omitempty"`
}

func (m *ProcessStatus) Reset()                    { *m = ProcessStatus{} }
func (m *ProcessStatus) String() string            { return proto.CompactTextString(m) }
func (*ProcessStatus) ProtoMessage()               {}
func (*ProcessStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ProcessStatus) GetRestartedCount() int32 {
	if m != nil {
		return m.RestartedCount
	}
	return 0
}

func (m *ProcessStatus) GetLastStartedTime() int32 {
	if m != nil {
		return m.LastStartedTime
	}
	return 0
}

func (m *ProcessStatus) GetPid() int32 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *ProcessStatus) GetMemoryUsage() int32 {
	if m != nil {
		return m.MemoryUsage
	}
	return 0
}

func (m *ProcessStatus) GetStatus() ProcessStatus_Status {
	if m != nil {
		return m.Status
	}
	return ProcessStatus_INIT
}

func (m *ProcessStatus) GetProcessDesc() string {
	if m != nil {
		return m.ProcessDesc
	}
	return ""
}

type Process struct {
	Spec   *ProcessSpec   `protobuf:"bytes,1,opt,name=spec" json:"spec,omitempty"`
	Status *ProcessStatus `protobuf:"bytes,2,opt,name=status" json:"status,omitempty"`
}

func (m *Process) Reset()                    { *m = Process{} }
func (m *Process) String() string            { return proto.CompactTextString(m) }
func (*Process) ProtoMessage()               {}
func (*Process) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Process) GetSpec() *ProcessSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Process) GetStatus() *ProcessStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ListReply struct {
	Process []*Process `protobuf:"bytes,1,rep,name=process" json:"process,omitempty"`
}

func (m *ListReply) Reset()                    { *m = ListReply{} }
func (m *ListReply) String() string            { return proto.CompactTextString(m) }
func (*ListReply) ProtoMessage()               {}
func (*ListReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ListReply) GetProcess() []*Process {
	if m != nil {
		return m.Process
	}
	return nil
}

type CommandRequest struct {
	Command     CommandRequest_Command `protobuf:"varint,1,opt,name=command,enum=CommandRequest_Command" json:"command,omitempty"`
	ProcessName string                 `protobuf:"bytes,2,opt,name=process_name,json=processName" json:"process_name,omitempty"`
}

func (m *CommandRequest) Reset()                    { *m = CommandRequest{} }
func (m *CommandRequest) String() string            { return proto.CompactTextString(m) }
func (*CommandRequest) ProtoMessage()               {}
func (*CommandRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CommandRequest) GetCommand() CommandRequest_Command {
	if m != nil {
		return m.Command
	}
	return CommandRequest_NONE
}

func (m *CommandRequest) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

type CommandReply struct {
}

func (m *CommandReply) Reset()                    { *m = CommandReply{} }
func (m *CommandReply) String() string            { return proto.CompactTextString(m) }
func (*CommandReply) ProtoMessage()               {}
func (*CommandReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type ConfigFile struct {
	Version string         `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	Process []*ProcessSpec `protobuf:"bytes,2,rep,name=process" json:"process,omitempty"`
	RpcAddr string         `protobuf:"bytes,3,opt,name=rpc_addr,json=rpcAddr" json:"rpc_addr,omitempty"`
}

func (m *ConfigFile) Reset()                    { *m = ConfigFile{} }
func (m *ConfigFile) String() string            { return proto.CompactTextString(m) }
func (*ConfigFile) ProtoMessage()               {}
func (*ConfigFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ConfigFile) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ConfigFile) GetProcess() []*ProcessSpec {
	if m != nil {
		return m.Process
	}
	return nil
}

func (m *ConfigFile) GetRpcAddr() string {
	if m != nil {
		return m.RpcAddr
	}
	return ""
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "PingRequest")
	proto.RegisterType((*PingReply)(nil), "PingReply")
	proto.RegisterType((*ProcessSpec)(nil), "ProcessSpec")
	proto.RegisterType((*ProcessStatus)(nil), "ProcessStatus")
	proto.RegisterType((*Process)(nil), "Process")
	proto.RegisterType((*ListRequest)(nil), "ListRequest")
	proto.RegisterType((*ListReply)(nil), "ListReply")
	proto.RegisterType((*CommandRequest)(nil), "CommandRequest")
	proto.RegisterType((*CommandReply)(nil), "CommandReply")
	proto.RegisterType((*ConfigFile)(nil), "ConfigFile")
	proto.RegisterEnum("ProcessSpec_Autorestart", ProcessSpec_Autorestart_name, ProcessSpec_Autorestart_value)
	proto.RegisterEnum("ProcessStatus_Status", ProcessStatus_Status_name, ProcessStatus_Status_value)
	proto.RegisterEnum("CommandRequest_Command", CommandRequest_Command_name, CommandRequest_Command_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GoSupervisor service

type GoSupervisorClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error)
	Command(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandReply, error)
}

type goSupervisorClient struct {
	cc *grpc.ClientConn
}

func NewGoSupervisorClient(cc *grpc.ClientConn) GoSupervisorClient {
	return &goSupervisorClient{cc}
}

func (c *goSupervisorClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingReply, error) {
	out := new(PingReply)
	err := grpc.Invoke(ctx, "/GoSupervisor/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goSupervisorClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListReply, error) {
	out := new(ListReply)
	err := grpc.Invoke(ctx, "/GoSupervisor/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goSupervisorClient) Command(ctx context.Context, in *CommandRequest, opts ...grpc.CallOption) (*CommandReply, error) {
	out := new(CommandReply)
	err := grpc.Invoke(ctx, "/GoSupervisor/Command", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GoSupervisor service

type GoSupervisorServer interface {
	Ping(context.Context, *PingRequest) (*PingReply, error)
	List(context.Context, *ListRequest) (*ListReply, error)
	Command(context.Context, *CommandRequest) (*CommandReply, error)
}

func RegisterGoSupervisorServer(s *grpc.Server, srv GoSupervisorServer) {
	s.RegisterService(&_GoSupervisor_serviceDesc, srv)
}

func _GoSupervisor_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoSupervisorServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GoSupervisor/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoSupervisorServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoSupervisor_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoSupervisorServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GoSupervisor/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoSupervisorServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GoSupervisor_Command_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoSupervisorServer).Command(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GoSupervisor/Command",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoSupervisorServer).Command(ctx, req.(*CommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GoSupervisor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GoSupervisor",
	HandlerType: (*GoSupervisorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _GoSupervisor_Ping_Handler,
		},
		{
			MethodName: "List",
			Handler:    _GoSupervisor_List_Handler,
		},
		{
			MethodName: "Command",
			Handler:    _GoSupervisor_Command_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gosupervisor.proto",
}

func init() { proto.RegisterFile("gosupervisor.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 780 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x54, 0x4d, 0x8f, 0xeb, 0x34,
	0x14, 0x6d, 0xd2, 0xa4, 0x49, 0x6f, 0x32, 0x9d, 0x60, 0x09, 0x11, 0x46, 0x2c, 0x42, 0x16, 0x8f,
	0x0a, 0x44, 0x10, 0x03, 0x2b, 0x16, 0xa0, 0xbe, 0x4e, 0xe6, 0xa9, 0x9a, 0x2a, 0xad, 0xdc, 0x14,
	0x9e, 0xd8, 0x54, 0x79, 0x89, 0x19, 0x45, 0x6a, 0x3e, 0xb0, 0xd3, 0x11, 0x5d, 0xf3, 0x63, 0xd8,
	0xf0, 0x87, 0xf8, 0x37, 0xc8, 0xce, 0xf7, 0xbc, 0x55, 0x7c, 0xcf, 0x39, 0xb1, 0x7d, 0xcf, 0xf5,
	0xbd, 0x80, 0x9e, 0x0b, 0x76, 0x29, 0x09, 0x7d, 0x49, 0x59, 0x41, 0xbd, 0x92, 0x16, 0x55, 0xe1,
	0xde, 0x80, 0xb1, 0x4f, 0xf3, 0x67, 0x4c, 0xfe, 0xbc, 0x10, 0x56, 0xb9, 0x3f, 0xc2, 0xbc, 0x0e,
	0xcb, 0xf3, 0x15, 0x7d, 0x05, 0xb7, 0x8c, 0xab, 0x63, 0x72, 0x7a, 0x21, 0x94, 0xa5, 0x45, 0x6e,
	0x4b, 0x8e, 0xb4, 0x9c, 0xe3, 0x45, 0x03, 0xff, 0x5a, 0xa3, 0xee, 0xbf, 0x53, 0x30, 0xf6, 0xb4,
	0x88, 0x09, 0x63, 0x87, 0x92, 0xc4, 0xe8, 0x4b, 0x30, 0xcb, 0x3a, 0x3c, 0xe5, 0x51, 0x46, 0x9a,
	0xbf, 0x8c, 0x06, 0x0b, 0xa2, 0x8c, 0x20, 0x1b, 0xb4, 0xb8, 0xc8, 0xb2, 0x28, 0x4f, 0x6c, 0x59,
	0xb0, 0x6d, 0x88, 0x10, 0x28, 0x17, 0x46, 0xa8, 0x3d, 0x15, 0xb0, 0x58, 0xa3, 0x2f, 0x60, 0x9e,
	0xa4, 0x94, 0xc4, 0x55, 0x41, 0xaf, 0xb6, 0x22, 0x88, 0x1e, 0x40, 0x0e, 0x18, 0x24, 0x7f, 0x49,
	0x69, 0x91, 0x67, 0x24, 0xaf, 0x6c, 0xd5, 0x99, 0xf2, 0xd3, 0x06, 0x10, 0xff, 0x9f, 0x55, 0x11,
	0xad, 0x18, 0x89, 0x99, 0x3d, 0x73, 0xa4, 0xa5, 0x8c, 0x7b, 0x00, 0xb9, 0x60, 0x8a, 0x80, 0x92,
	0x8a, 0xa6, 0x84, 0xd9, 0x9a, 0x23, 0x2d, 0x55, 0x3c, 0xc2, 0xd0, 0x4f, 0x60, 0x44, 0x97, 0xaa,
	0xa0, 0x44, 0xa0, 0xb6, 0xee, 0x48, 0xcb, 0xc5, 0xbd, 0xed, 0x0d, 0xb2, 0xf6, 0x56, 0x3d, 0x8f,
	0x87, 0x62, 0x7e, 0x3a, 0xf9, 0x2b, 0xad, 0xe2, 0x22, 0x21, 0xcc, 0x9e, 0x3b, 0xd3, 0xa5, 0x8a,
	0x7b, 0x80, 0xb3, 0x5c, 0x5c, 0xef, 0x0b, 0x8e, 0xb4, 0xd4, 0x71, 0x0f, 0x70, 0x37, 0x12, 0xc2,
	0x62, 0xdb, 0xa8, 0xdd, 0xe0, 0x6b, 0xf7, 0x67, 0x30, 0x06, 0x67, 0x21, 0x80, 0xd9, 0x31, 0x78,
	0x0a, 0x76, 0xbf, 0x59, 0x13, 0x34, 0x07, 0xf5, 0x71, 0xb5, 0x3d, 0xf8, 0x96, 0x84, 0x16, 0x00,
	0xc7, 0xc0, 0x7f, 0xbf, 0xf7, 0xd7, 0xa1, 0xff, 0x60, 0xc9, 0x48, 0x07, 0x25, 0xc4, 0x47, 0xdf,
	0x9a, 0xba, 0xff, 0xc9, 0x70, 0xd3, 0x5e, 0xbc, 0x8a, 0xaa, 0x0b, 0xe3, 0x95, 0x6e, 0x76, 0x23,
	0xc9, 0x29, 0x2e, 0x2e, 0x79, 0x25, 0x6a, 0xa6, 0xe2, 0x45, 0x07, 0xaf, 0x39, 0x8a, 0xbe, 0x86,
	0x4f, 0xce, 0x11, 0xab, 0x4e, 0xad, 0xb6, 0x4a, 0x33, 0x22, 0x0a, 0xa8, 0xe2, 0x5b, 0x4e, 0x1c,
	0x6a, 0x3c, 0x4c, 0x33, 0x82, 0x2c, 0x98, 0x96, 0x69, 0x22, 0xea, 0xa8, 0x62, 0xbe, 0xe4, 0xef,
	0x22, 0x23, 0x59, 0x41, 0xaf, 0xa7, 0x0b, 0x8b, 0x9e, 0x89, 0xa8, 0xa4, 0x8a, 0x8d, 0x1a, 0x3b,
	0x72, 0x08, 0x7d, 0x0b, 0x33, 0x26, 0xee, 0x64, 0xab, 0xc2, 0xe2, 0x4f, 0xbd, 0xd1, 0x4d, 0xbd,
	0xfa, 0x83, 0x1b, 0xd1, 0xf0, 0xa5, 0x09, 0x9b, 0x66, 0xa3, 0x97, 0xf6, 0xc0, 0xdd, 0x3a, 0xc3,
	0xac, 0xc9, 0x52, 0x07, 0x65, 0x13, 0x6c, 0x42, 0x6b, 0x82, 0x4c, 0xd0, 0x0f, 0xe1, 0x0a, 0x87,
	0x9b, 0xe0, 0x9d, 0x25, 0x21, 0x03, 0x34, 0x7c, 0x0c, 0x02, 0x1e, 0xc8, 0x3c, 0x38, 0x84, 0xbb,
	0xfd, 0xde, 0x7f, 0xb0, 0x94, 0x5a, 0xb7, 0xdb, 0xef, 0x39, 0x35, 0xe3, 0xd4, 0xdb, 0xd5, 0xfa,
	0x69, 0xf7, 0xf8, 0x68, 0x69, 0xb5, 0xd3, 0xe1, 0x6a, 0x6b, 0xe9, 0xbc, 0x00, 0xfe, 0xfb, 0x0d,
	0x77, 0x79, 0xee, 0x1e, 0x40, 0x6b, 0x2e, 0x8c, 0x1c, 0x50, 0x58, 0x49, 0x62, 0xe1, 0xa4, 0x71,
	0x6f, 0x0e, 0xdf, 0x0a, 0x16, 0x0c, 0x7a, 0xd3, 0x25, 0x2b, 0x0b, 0xcd, 0x62, 0x9c, 0x6c, 0x9b,
	0x25, 0x6f, 0xd2, 0x6d, 0xca, 0xaa, 0xb6, 0x49, 0xbf, 0x83, 0x79, 0x1d, 0xf2, 0x26, 0x75, 0x41,
	0x6b, 0xb2, 0xb5, 0x25, 0x67, 0xba, 0x34, 0xee, 0xf5, 0x76, 0x13, 0xdc, 0x12, 0xee, 0x3f, 0x12,
	0x2c, 0xd6, 0x75, 0x7b, 0x35, 0x7b, 0xa0, 0xef, 0xfb, 0xfe, 0x93, 0x84, 0xd1, 0x9f, 0x79, 0x63,
	0x45, 0x17, 0x76, 0x8d, 0xf9, 0xba, 0xab, 0xe5, 0x8f, 0xba, 0xda, 0xfd, 0x05, 0xb4, 0xe6, 0x37,
	0x6e, 0x76, 0xb0, 0x0b, 0x7c, 0x6b, 0xc2, 0x57, 0xdc, 0x44, 0x4b, 0xe2, 0x9e, 0x09, 0xdb, 0x6b,
	0x9b, 0xb1, 0x5f, 0x07, 0x53, 0xae, 0x78, 0xda, 0x6c, 0xb7, 0x96, 0xe2, 0x2e, 0xc0, 0xec, 0xae,
	0x51, 0x9e, 0xaf, 0x6e, 0x0a, 0xb0, 0x2e, 0xf2, 0x3f, 0xd2, 0xe7, 0xc7, 0xf4, 0x2c, 0x86, 0xc6,
	0x78, 0x10, 0xb5, 0x21, 0x7a, 0xd3, 0xbb, 0x20, 0x0b, 0x17, 0xc6, 0x76, 0xb7, 0x24, 0xfa, 0x1c,
	0x74, 0x5a, 0xc6, 0xa7, 0x28, 0x49, 0xda, 0x01, 0xa3, 0xd1, 0x32, 0x5e, 0x25, 0x09, 0xbd, 0xff,
	0x5b, 0x02, 0xf3, 0x5d, 0x71, 0xe8, 0x06, 0x24, 0x72, 0x41, 0xe1, 0xb3, 0x10, 0x99, 0xde, 0x60,
	0x42, 0xde, 0x81, 0xd7, 0x0d, 0x48, 0x77, 0xc2, 0x35, 0xbc, 0x14, 0xc8, 0xf4, 0x06, 0x05, 0xba,
	0x03, 0xaf, 0xab, 0x8f, 0x3b, 0x41, 0xdf, 0xf4, 0xa6, 0xdc, 0xbe, 0x32, 0xf9, 0xee, 0xc6, 0x1b,
	0xa5, 0x3b, 0x79, 0xab, 0xfc, 0x2e, 0x97, 0x1f, 0x3e, 0xcc, 0xc4, 0x70, 0xfe, 0xe1, 0xff, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x63, 0xbd, 0x5f, 0xdd, 0xb2, 0x05, 0x00, 0x00,
}
